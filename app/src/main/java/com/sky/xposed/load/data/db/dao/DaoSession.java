package com.sky.xposed.load.data.db.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.sky.xposed.load.data.db.entity.LoadEntity;
import com.sky.xposed.load.data.db.entity.HookEntity;

import com.sky.xposed.load.data.db.dao.LoadEntityDao;
import com.sky.xposed.load.data.db.dao.HookEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig loadEntityDaoConfig;
    private final DaoConfig hookEntityDaoConfig;

    private final LoadEntityDao loadEntityDao;
    private final HookEntityDao hookEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        loadEntityDaoConfig = daoConfigMap.get(LoadEntityDao.class).clone();
        loadEntityDaoConfig.initIdentityScope(type);

        hookEntityDaoConfig = daoConfigMap.get(HookEntityDao.class).clone();
        hookEntityDaoConfig.initIdentityScope(type);

        loadEntityDao = new LoadEntityDao(loadEntityDaoConfig, this);
        hookEntityDao = new HookEntityDao(hookEntityDaoConfig, this);

        registerDao(LoadEntity.class, loadEntityDao);
        registerDao(HookEntity.class, hookEntityDao);
    }
    
    public void clear() {
        loadEntityDaoConfig.clearIdentityScope();
        hookEntityDaoConfig.clearIdentityScope();
    }

    public LoadEntityDao getLoadEntityDao() {
        return loadEntityDao;
    }

    public HookEntityDao getHookEntityDao() {
        return hookEntityDao;
    }

}
